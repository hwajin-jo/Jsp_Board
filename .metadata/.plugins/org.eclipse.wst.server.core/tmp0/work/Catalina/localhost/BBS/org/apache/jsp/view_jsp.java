/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.73
 * Generated at: 2022-03-28 09:51:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.PrintWriter;
import bbs.Bbs;
import bbs.BbsDAO;
import bbs.JjimDAO;
import bbs.Jjim;
import evaluation.Evaluation;
import evaluation.EvaluationDAO;
import comment.Comment;
import comment.CommentDAO;
import java.io.File;
import java.util.ArrayList;

public final class view_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("bbs.Bbs");
    _jspx_imports_classes.add("bbs.Jjim");
    _jspx_imports_classes.add("comment.Comment");
    _jspx_imports_classes.add("bbs.BbsDAO");
    _jspx_imports_classes.add("bbs.JjimDAO");
    _jspx_imports_classes.add("comment.CommentDAO");
    _jspx_imports_classes.add("evaluation.Evaluation");
    _jspx_imports_classes.add("evaluation.EvaluationDAO");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width\" initial-scale=\"1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/custom.css\">\r\n");
      out.write("\r\n");
      out.write("<title>영화리뷰 게시판</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

		String userID = null;
		if(session.getAttribute("userID") != null){
			userID = (String) session.getAttribute("userID");
		}
		int boardID = 0;
		if (request.getParameter("boardID") != null){
			boardID = Integer.parseInt(request.getParameter("boardID"));
		}
		int bbsID = 0;
		if (request.getParameter("bbsID") != null){
			bbsID = Integer.parseInt(request.getParameter("bbsID"));
		}
		if (bbsID == 0){
			PrintWriter script = response.getWriter();
	 		script.println("<script>");
	 		script.println("alert('유효하지 않은 글입니다.')");
	 		script.println("location href = 'login.jsp'");
	 		script.println("</script>");
		}
		Bbs bbs = new BbsDAO().getBbs(bbsID);
		Comment comment = new CommentDAO().getComment(bbsID);
	
      out.write("\r\n");
      out.write("	<nav class=\"navbar navbar-default\">\r\n");
      out.write("		<div class=\"navbar-header\">\r\n");
      out.write("			<button type=\"button\" class=\"navbar-toggle collapsed\"\r\n");
      out.write("				data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\"\r\n");
      out.write("				aria-expanded=\"false\">\r\n");
      out.write("				<span class=\"icon-bar\"></span>\r\n");
      out.write("				<span class=\"icon-bar\"></span>\r\n");
      out.write("				<span class=\"icon-bar\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"main.jsp\">\r\n");
      out.write("				<p style=\"font-weight: bold\">영화리뷰 게시판</p>\r\n");
      out.write("			</a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("			<ul class=\"nav navbar-nav\">\r\n");
      out.write("				<li><a href=\"main.jsp\">메인</a></li>\r\n");
      out.write("				");
 if (boardID == 1){ 
      out.write("\r\n");
      out.write("					<li class=\"active\"><a href=\"bbs.jsp?boardID=1&pageNumber=1\">영화 소개</a></li>\r\n");
      out.write("					<li><a href=\"bbs.jsp?boardID=2&pageNumber=1\">자유 게시판</a></li>\r\n");
      out.write("				");
} else if(boardID == 2){ 
      out.write("\r\n");
      out.write("					<li><a href=\"bbs.jsp?boardID=1&pageNumber=1\">영화 소개</a></li>\r\n");
      out.write("					<li class=\"active\"><a href=\"bbs.jsp?boardID=2&pageNumber=1\">자유 게시판</a></li>\r\n");
      out.write("				");
 } 
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("			");

				if(userID == null){		//로그인이 되어있지 않은 경우
			
      out.write("\r\n");
      out.write("			<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("         		<li class=\"dropdown\">\r\n");
      out.write("           			<a href=\"#\" class=\"dropdown-toggle\" \r\n");
      out.write("            		data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" \r\n");
      out.write("            		aria-expanded=\"false\">접속하기<span class=\"caret\"></span></a>\r\n");
      out.write("        			<ul class=\"dropdown-menu\">\r\n");
      out.write("        				<li><a href=\"login.jsp\">로그인</a></li>\r\n");
      out.write("              			<li><a href=\"join.jsp\">회원가입</a></li>\r\n");
      out.write("        			</ul>\r\n");
      out.write("         		</li>\r\n");
      out.write("       		</ul>\r\n");
      out.write("			");
 
				} else {
			
      out.write("\r\n");
      out.write("			<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("         		<li class=\"dropdown\">\r\n");
      out.write("           			<a href=\"#\" class=\"dropdown-toggle\" \r\n");
      out.write("            		data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" \r\n");
      out.write("            		aria-expanded=\"false\">회원관리<span class=\"caret\"></span></a>\r\n");
      out.write("        		<ul class=\"dropdown-menu\">\r\n");
      out.write("              		<li><a href=\"jjimBbs.jsp?pageNumber=1\">북마크</a></li>\r\n");
      out.write("              		<li><a href=\"logout.jsp\">로그아웃</a></li>\r\n");
      out.write("            	</ul>    \r\n");
      out.write("         		</li>\r\n");
      out.write("       		</ul>\r\n");
      out.write("			");

				}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"col-lg-5\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<table class=\"table table-haver\" style=\"border: 1px solid #dddddd\">\r\n");
      out.write("					");
if(boardID == 1){
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"5\" align=\"left\" bgcolor=\"beige\">&nbsp;&nbsp;[제목]&nbsp;&nbsp;");
      out.print( bbs.getBbsTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">","&gt;").replaceAll("\n","<br>") );
      out.write("</td>\r\n");
      out.write("						");
	JjimDAO jjimDAO = new JjimDAO();
							ArrayList<Jjim> list1 = jjimDAO.getJjim(userID, bbsID);
							if (list1.isEmpty()){
      out.write("\r\n");
      out.write("						<td align=\"right\" bgcolor=\"beige\"><button onclick = \"location.href='jjimAction.jsp?bbsID=");
      out.print(bbsID);
      out.write("'\">찜하기</button></td>\r\n");
      out.write("						");
	}
							else{
      out.write("\r\n");
      out.write("						<td align=\"right\" bgcolor=\"beige\"><button onclick = \"location.href='jjimAction.jsp?bbsID=");
      out.print(bbsID);
      out.write("'\">찜해제</button></td>\r\n");
      out.write("						");
	} 
      out.write("						\r\n");
      out.write("					</tr>\r\n");
      out.write("					");
} 
					if (boardID == 2){
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"6\" align=\"left\" bgcolor=\"beige\">&nbsp;&nbsp;[제목]&nbsp;&nbsp;");
      out.print( bbs.getBbsTitle().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">","&gt;").replaceAll("\n","<br>") );
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");
} 
      out.write("	\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"3\" align=\"left\">&nbsp;&nbsp;");
      out.print( bbs.getUserID() );
      out.write("</td>\r\n");
      out.write("						<td colspan=\"3\" align=\"right\">");
      out.print( bbs.getBbsDate().substring(0,11) + bbs.getBbsDate().substring(11,13) + "시" +  bbs.getBbsDate().substring(14,16) + "분"  );
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");
 	
					String real = "C:\\JSP\\projects\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\BBS\\bbsUpload";
					File viewFile = new File(real+"\\"+bbsID+"사진.jpg");
					if(viewFile.exists()){
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td colspan=\"6\"><br><br><img src = \"bbsUpload/");
      out.print(bbsID );
      out.write("사진.jpg\" border=\"300px\" width=\"300px\" height=\"300px\"><br><br>\r\n");
      out.write("					");
 }
					else {
      out.write("<td colspan=\"6\"><br><br>");
} 
      out.write("\r\n");
      out.write("						");
      out.print( bbs.getBbsContent().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;").replaceAll(">","&gt;").replaceAll("\n","<br>"));
      out.write("<br><br></td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

					if(boardID==1){
												int like = 0;
												int bad = 0;
												EvaluationDAO evaluationDAO = new EvaluationDAO();
												ArrayList<Evaluation> list = evaluationDAO.getList(bbsID);
												for(int i=0; i<list.size(); i++){
													like = like + list.get(i).getLikeIt();
													bad = bad + list.get(i).getBadIt();
												}
					
      out.write("\r\n");
      out.write("					<tr align=\"center\">\r\n");
      out.write("						<td colspan=\"3\"><button onclick=\"location.href='evaluationAction.jsp?likeit=1&badit=0&bbsID=");
      out.print(bbsID);
      out.write("'\">좋아요(");
      out.print(like );
      out.write(")</button></td>			\r\n");
      out.write("						<td colspan=\"3\"><button onclick=\"location.href='evaluationAction.jsp?likeit=0&badit=1&bbsID=");
      out.print(bbsID);
      out.write("'\">싫어요(");
      out.print(bad );
      out.write(")</button></td>		\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("					");

						}
					
      out.write("\r\n");
      out.write("					<td colspan=\"6\" align=\"center\">	<a href=\"bbs.jsp?boardID=");
      out.print(boardID );
      out.write("\" class=\"btn-primary\" >목록</a>\r\n");
      out.write("					");

						if(userID != null && userID.equals(bbs.getUserID())){
					
      out.write("\r\n");
      out.write("							<a href = \"update.jsp?bbsID=");
      out.print( bbsID );
      out.write("&boardID=");
      out.print(boardID );
      out.write("\" class=\"btn-primary\">수정</a>\r\n");
      out.write("							<a onclick=\"return confirm('정말로 삭제하시겠습니까?')\" href = \"deleteAction.jsp?bbsID=");
      out.print( bbsID );
      out.write("&boardID=");
      out.print(boardID );
      out.write("\" class=\"btn-primary\">삭제</a>\r\n");
      out.write("					</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");
 } 
      out.write("\r\n");
      out.write("			</table>		\r\n");
      out.write("		</div>\r\n");
      out.write("		");
 if (boardID == 2) { 
      out.write("\r\n");
      out.write("		<!-- 댓글 리스트  -->\r\n");
      out.write("			<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<table class=\"table table-striped\" style=\"text-align: center; border: 1px solid #dddddd\">\r\n");
      out.write("					<tbody>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td align=\"left\" bgcolor=\"beige\">댓글</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr>\r\n");
      out.write("						");

							CommentDAO commentDAO = new CommentDAO();
							ArrayList<Comment> list = commentDAO.getList(boardID, bbsID);
							for(int i=0; i<list.size(); i++){
						
      out.write("\r\n");
      out.write("							<div class=\"container\"> <!-- 댓글하나당 container만들어서 보여줌 -->\r\n");
      out.write("								<div class=\"row\">\r\n");
      out.write("									<table class=\"table table-striped\" style=\"text-align: center; border: 1px solid #dddddd\">\r\n");
      out.write("										<tbody>\r\n");
      out.write("										<tr>						\r\n");
      out.write("										<td align=\"left\">");
      out.print( list.get(i).getUserID() );
      out.write("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
      out.print( list.get(i).getCommentDate().substring(0,11) + list.get(i).getCommentDate().substring(11,13) + "시" + list.get(i).getCommentDate().substring(14,16) + "분" );
      out.write("</td>		\r\n");
      out.write("										<td colspan=\"2\"></td>\r\n");
      out.write("										<td align=\"right\">");

													if(list.get(i).getUserID() != null && list.get(i).getUserID().equals(userID)){
												
      out.write("\r\n");
      out.write("														<form name = \"p_search\">\r\n");
      out.write("															<a type=\"button\" onclick=\"nwindow(");
      out.print(boardID);
      out.write(',');
      out.print(bbsID );
      out.write(',');
      out.print(list.get(i).getCommentID());
      out.write(")\" class=\"btn-primary\">수정</a>\r\n");
      out.write("														</form>	\r\n");
      out.write("														<a onclick=\"return confirm('정말로 삭제하시겠습니까?')\" href = \"commentDeleteAction.jsp?bbsID=");
      out.print(bbsID );
      out.write("&commentID=");
      out.print( list.get(i).getCommentID() );
      out.write("\" class=\"btn-primary\">삭제</a>\r\n");
      out.write("																	\r\n");
      out.write("												");

													}
												
      out.write("	\r\n");
      out.write("										</td>\r\n");
      out.write("										</tr>\r\n");
      out.write("										<tr>\r\n");
      out.write("											<td colspan=\"5\" align=\"left\">");
      out.print( list.get(i).getCommentText() );
      out.write(" </td>											\r\n");
      out.write("										</tr>\r\n");
      out.write("									</tbody>\r\n");
      out.write("								</table>			\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						");

							}
						
      out.write("\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		");
 } 
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		");
 if(boardID == 2 ) {
      out.write("\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"form-group\">\r\n");
      out.write("			<form method=\"post\" encType = \"multipart/form-data\" action=\"commentAction.jsp?bbsID=");
      out.print( bbsID );
      out.write("&boardID=");
      out.print(boardID);
      out.write("\">\r\n");
      out.write("					<table class=\"table table-striped\" style=\"text-align: center; border: 1px solid #dddddd\">\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td style=\"border-bottom:none;\" valign=\"middle\"><br><br>");
      out.print(userID );
      out.write("</td>\r\n");
      out.write("							<td><input type=\"text\" style=\"height:100px;\" class=\"form-control\" placeholder=\"상대방을 존중하는 댓글을 남깁시다.\" name = \"commentText\"></td>\r\n");
      out.write("							<td><br><br><input type=\"submit\" class=\"btn-primary pull\" value=\"댓글 작성\"></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</table>\r\n");
      out.write("			</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	");
 } 
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("	function nwindow(boardID,bbsID,commentID){\r\n");
      out.write("		window.name = \"commentParant\";\r\n");
      out.write("		var url= \"commentUpdate.jsp?boardID=\"+boardID+\"&bbsID=\"+bbsID+\"&commentID=\"+commentID;\r\n");
      out.write("		window.open(url,\"\",\"width=600,height=230,left=300\");\r\n");
      out.write("	}\r\n");
      out.write("	</script>\r\n");
      out.write("	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("	<script src=\"js/bootstrap.min.js\"></script> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
